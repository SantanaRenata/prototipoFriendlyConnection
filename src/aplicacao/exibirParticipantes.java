/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package aplicacao;

import modelo.Pessoa;
import dao.DAOFactory;
import dao.PessoaDAO;
import dao.PessoaDAOJDBC;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author abima
 */
public class exibirParticipantes extends javax.swing.JFrame {
     PessoaDAO pessoaDAO = DAOFactory.criarPessoaDAO();
     DefaultTableModel modeloPessoa = null;

    /**
     * Creates new form exibirParticipantes
     */
    public exibirParticipantes() {
        initComponents();
        modeloPessoa = (DefaultTableModel) tblPessoa.getModel();
    }
    
    
    
    private void preencherTabelaPessoa() {
    // Limpa os dados da tabela
    modeloPessoa.setRowCount(0);  // Usar setRowCount é mais seguro do que getDataVector().clear()

    try {
        // Obtém a lista de pessoas
        List<Pessoa> pessoas = pessoaDAO.listar();
       

        // Adiciona as pessoas na tabela
        for (Pessoa pessoa : pessoas) {
            modeloPessoa.addRow(new Object[]{
                pessoa.getId(),
                pessoa.getNome(),
                pessoa.getTelefone()
            });
        }

        // Notifica que os dados mudaram
        modeloPessoa.fireTableDataChanged();

    } catch (Exception e) {
        e.printStackTrace();  // Ajuda a visualizar o erro
        throw e;
    }
}
    
   
     
    
    
    private void apagarPessoa() {
        try {
            Integer id = (Integer) modeloPessoa.getValueAt(tblPessoa.getSelectedRow(), 0);

            int linha = pessoaDAO.apagar(id);
            if (linha > 0) {
                modeloPessoa.removeRow(tblPessoa.getSelectedRow());
                JOptionPane.showMessageDialog(this, "Pessoa excluida com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir pessoa.");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Por favor, selecionar uma pessoa");
        }
    }
    
    

    
    
    private void editarPessoa() {
        try {
            Integer id = (Integer) modeloPessoa.getValueAt(tblPessoa.getSelectedRow(), 0);
            String nome = (String) modeloPessoa.getValueAt(tblPessoa.getSelectedRow(), 1);
            String telefone = (String) modeloPessoa.getValueAt(tblPessoa.getSelectedRow(), 1);
            
            

            Pessoa pessoa = new Pessoa();
            pessoa.setId(id);
            pessoa.setNome(nome);
            pessoa.setTelefone(telefone);
            
            
            
            //new frmLutador(lutador).setVisible(true);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Por favor, selecionar uma pessoa da tabela");
        }
    }

    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bntEditar = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();
        bntCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPessoa = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bntEditar.setText("Editar");
        bntEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntEditarActionPerformed(evt);
            }
        });

        btnApagar.setText("Apagar");
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });

        bntCancelar.setText("Cancelar");
        bntCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntCancelarActionPerformed(evt);
            }
        });

        tblPessoa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "nome", "telefone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPessoa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblPessoaFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(tblPessoa);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(bntEditar)
                .addGap(18, 18, 18)
                .addComponent(btnApagar)
                .addGap(26, 26, 26)
                .addComponent(bntCancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntEditar)
                    .addComponent(btnApagar)
                    .addComponent(bntCancelar))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblPessoaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblPessoaFocusGained
        // TODO add your handling code here:
        preencherTabelaPessoa();
    }//GEN-LAST:event_tblPessoaFocusGained

    private void bntCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
        
    }//GEN-LAST:event_bntCancelarActionPerformed

    private void bntEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntEditarActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_bntEditarActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
        // TODO add your handling code here:
        apagarPessoa();
    }//GEN-LAST:event_btnApagarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(exibirParticipantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(exibirParticipantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(exibirParticipantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(exibirParticipantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new exibirParticipantes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntCancelar;
    private javax.swing.JButton bntEditar;
    private javax.swing.JButton btnApagar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPessoa;
    // End of variables declaration//GEN-END:variables
}
